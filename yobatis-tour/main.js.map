{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/code-intro/code-intro.component.css","webpack:///./src/app/code-intro/code-intro.component.html","webpack:///./src/app/code-intro/code-intro.component.ts","webpack:///./src/app/config/config.component.css","webpack:///./src/app/config/config.component.html","webpack:///./src/app/config/config.component.ts","webpack:///./src/app/install/install.component.css","webpack:///./src/app/install/install.component.html","webpack:///./src/app/install/install.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/method-usage.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/usage/usage.component.css","webpack:///./src/app/usage/usage.component.html","webpack:///./src/app/usage/usage.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\nmat-sidenav {\\n  box-shadow: 1px 1px 1px 1px rgba(63, 81, 131, .2);\\n}\\n\\n.query-bar-box {\\n  height: 2px;\\n  padding: 0;\\n}\\n\\n.query-bar-box mat-progress-bar {\\n  width: 100%;\\n  height: 2px;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n\\nmat-sidenav-container {\\n  margin-top: 50px;\\n  background-color: white;\\n\\n  /*height: calc(100vh - 50px);*/\\n}\\n\\n#header mat-toolbar-row:first-child {\\n  height: 50px;\\n}\\n\\n#header {\\n  top: 0;\\n  height: 50px;\\n  position: fixed;\\n  z-index: 100;\\n  min-height: 50px;\\n}\\n\\nmat-sidenav {\\n  top: 50px;\\n  position: fixed;\\n}\\n\\nmat-sidenav-content {\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  padding-bottom: 10px;\\n}\\n\\n#header span {\\n  font-size: 14px;\\n  flex: 1 1 auto;\\n}\\n\\n#header span:last-child {\\n  text-align: right;\\n}\\n\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<mat-toolbar color=\\\"primary\\\" id=\\\"header\\\">\\n  <mat-toolbar-row>\\n    <span>Yobatis 使用手册</span>\\n    <span></span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<mat-sidenav-container class=\\\"container\\\">\\n  <mat-sidenav opened mode=\\\"side\\\">\\n    <app-nav></app-nav>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'yobatis-tour';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { NavComponent } from './nav/nav.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport { ConfigComponent } from './config/config.component';\nimport { InstallComponent } from './install/install.component';\nimport { CodeIntroComponent } from './code-intro/code-intro.component';\nimport { UsageComponent } from './usage/usage.component';\n\nconst appRoutes: Routes = [\n  {path: 'config', component: ConfigComponent},\n  {path: 'install', component: InstallComponent},\n  {path: 'code-intro', component: CodeIntroComponent},\n  {path: 'usage', component: UsageComponent},\n  {path: '**', component: InstallComponent}\n];\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    ConfigComponent,\n    InstallComponent,\n    CodeIntroComponent,\n    UsageComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes),\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"img {\\n  max-width: 60%;\\n  max-height: 450px;\\n}\\n\"","module.exports = \"<h1>\\n  代码速览\\n</h1>\\n<mat-divider></mat-divider>\\n<div>\\n  <p>在Yobatis Tool Window中单击Generate以后，Yobatis会为表employee生成如下文件</p>\\n  <img src=\\\"assets/img/code_arch.jpg\\\" />\\n</div>\\n<div>\\n  <h3>EmployeeDao.java</h3>\\n  <mat-divider></mat-divider>\\n  <p>常用的CURD signature，生成后Yobatis不会覆写，可在该文件中添加自定义方法。具体使用请访问\\\"代码使用\\\":</p>\\n  <img src=\\\"assets/img/dao.jpg\\\" />\\n</div>\\n<div>\\n  <h3>BaseEmployee.java</h3>\\n  <mat-divider></mat-divider>\\n  <p>根据表生成的实体类，包含表中所有字段，表结构发生变更后，重新Generate即可。Yobatis每次Generate会覆盖该文件，请勿修改。</p>\\n  <img src=\\\"assets/img/base_entity.jpg\\\" />\\n</div>\\n<div>\\n  <h3>Employee.java</h3>\\n  <mat-divider></mat-divider>\\n  <p>配合BaseYobatis使用，可在该类中添加自定义field, method，生成后Yobatis不会覆写该文件。</p>\\n  <img src=\\\"assets/img/entity.jpg\\\" />\\n</div>\\n<div>\\n  <h3>EmployeeMapper.xml</h3>\\n  <mat-divider></mat-divider>\\n  <p>Mybatis mapper文件，可在该文件中添加tag，Yobatis每次都会覆写自动生成的tag，保留自定义tag。</p>\\n  <img src=\\\"assets/img/xml.jpg\\\" />\\n</div>\\n<p>\\n  <strong>请git clone https://github.com/linbaiye/yobatis-sample.git 查看完整示例项目。</strong>\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-code-intro',\n  templateUrl: './code-intro.component.html',\n  styleUrls: ['./code-intro.component.css']\n})\nexport class CodeIntroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img {\\n  max-width: 60%;\\n  max-height: 450px;\\n}\\n\"","module.exports = \"<h1>\\n  配置\\n</h1>\\n<mat-divider></mat-divider>\\n<div>\\n  <p>使用Yobatis之前需要配置mysql数据库，单击Yobatis图标（第1步）弹出窗口，单击Config显示配置（第2步），单击Refresh显示当前库中的表（第三步）：</p>\\n  <img src=\\\"assets/img/activation.jpg\\\" />\\n  <p>填入代码生成位置以及生成, java文件的package名字, xml mapper的位置，单击Generate（第4步）即可生成对应的DAO/Entity/Xml Mapper代码：</p>\\n  <img src=\\\"assets/img/generate.jpg\\\" />\\n  <p>生成前后对比（完整示例请git clone https://github.com/linbaiye/yobatis-sample.git）</p>\\n  <img src=\\\"assets/img/before_generation.jpg\\\" /> <label>----->>></label>\\n  <img src=\\\"assets/img/after_generation.jpg\\\" />\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.css']\n})\nexport class ConfigComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img {\\n  max-width: 60%;\\n  max-height: 450px;\\n}\\n\"","module.exports = \"<h1>\\n  安装\\n</h1>\\n<mat-divider></mat-divider>\\n<div>\\n  <p>\\n    Yobatis目前只支持从本地安装，请到https://github.com/linbaiye/yobatis下载最新release。下载后找到IDEA的Preference/Settings目录，选择Plugins，通过Install Plugin From Disk安装，选择zip包即可，不需要解压:\\n  </p>\\n  <img src=\\\"assets/img/settings.jpg\\\" />\\n  <img src=\\\"assets/img/from_disk.jpg\\\" />\\n  <p>\\n    安装完成并重启后会在右侧显示Yobatis ToolWindow的按钮。如下图:\\n  </p>\\n  <img src=\\\"assets/img/after_installation.jpg\\\" />\\n  <p>\\n    若没有该ToolWindow的按钮，请检查View -> Tool Windows，如下图:\\n  </p>\\n  <img src=\\\"assets/img/tool_window_position.jpg\\\" />\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-install',\n  templateUrl: './install.component.html',\n  styleUrls: ['./install.component.css']\n})\nexport class InstallComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatCardModule, MatCheckboxModule, MatExpansionModule, MatFormFieldModule, MatGridListModule,\n  MatIconModule, MatInputModule,\n  MatListModule,\n  MatMenuModule, MatProgressBarModule, MatProgressSpinnerModule, MatSidenavModule,\n  MatToolbarModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatSidenavModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatProgressBarModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatCardModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatListModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatGridListModule,\n    MatSidenavModule,\n    MatCardModule\n  ]\n})\nexport class MaterialModule {}\n","\nexport class MethodUsage {\n  name: string;\n  brief: string;\n  doc: string;\n  returnValue: string;\n  example: string;\n\n  constructor(name: string, brief: string, doc: string, returnValue: string, example: string) {\n    this.name = name;\n    this.brief = brief;\n    this.doc = doc;\n    this.returnValue = returnValue;\n    this.example = example;\n  }\n}\n","module.exports = \"mat-sidenav {\\n  width: 300px;\\n}\\n\\nmat-list-item {\\n  padding: 0;\\n}\\n\\nmat-list-item .mat-list-item-content {\\n  padding: 0;\\n}\\n\\na.active-list-item {\\n  background-color: #3f51b5;\\n  color: white;\\n}\\n\\na.active-list-item:active, a.active-list-item:focus {\\n  background-color: #3f51b5;\\n  color: white;\\n}\\n\\nmat-list-item a {\\n  width: 100%;\\n  height: 100%;\\n  line-height: 48px;\\n}\\n\"","module.exports = \"<mat-nav-list dense>\\n  <a routerLinkActive=\\\"active-list-item\\\" mat-list-item routerLink=\\\"/install\\\">\\n    安装Yobatis\\n  </a>\\n  <mat-divider></mat-divider>\\n  <a routerLinkActive=\\\"active-list-item\\\" mat-list-item routerLink=\\\"/config\\\">\\n    配置Yobatis\\n  </a>\\n  <mat-divider></mat-divider>\\n  <a routerLinkActive=\\\"active-list-item\\\" mat-list-item routerLink=\\\"/code-intro\\\">\\n    代码速览\\n  </a>\\n  <mat-divider></mat-divider>\\n  <a routerLinkActive=\\\"active-list-item\\\" mat-list-item  routerLink=\\\"/usage\\\">\\n    代码使用\\n  </a>\\n</mat-nav-list>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-card {\\n  margin-top: 10px;\\n  margin-bottom: 20px;\\n\\n}\\n\\nmat-card-content pre {\\n  background: rgba(0,0,0,.01);\\n  border: .5px solid rgba(0,0,0,.03);\\n  border-radius: 5px;\\n  padding: 5px 20px;\\n}\\n\\n.method {\\n  font-size: 16px;\\n}\\n\"","module.exports = \"<h1>使用生成文件</h1>\\n<mat-divider></mat-divider>\\n<p>下面以表create table employee(id bigint primary key auto_increment, name char(20), phone char(12)) 作为示例，介绍各个CURD接口的使用方法。</p>\\n<mat-card *ngFor=\\\"let usage of methodUsageList\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"method\\\">{{usage.name}}</mat-card-title>\\n    <mat-card-subtitle>{{usage.brief}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <p>\\n      {{usage.doc}}\\n    </p>\\n    <p>\\n      {{usage.returnValue}}\\n    </p>\\n    <pre class=\\\"example\\\">\\n      <code>\\n        {{usage.example}}\\n      </code>\\n    </pre>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MethodUsage} from '../method-usage';\n\n@Component({\n  selector: 'app-usage',\n  templateUrl: './usage.component.html',\n  styleUrls: ['./usage.component.css']\n})\nexport class UsageComponent implements OnInit {\n\n  methodUsageList: MethodUsage[] = [\n    new MethodUsage('int insert(BaseEmployee record)', '插入一条记录',\n      '调用该方法向表中插入一条记录，如表为自增主键且record中对应主键的field为null，该方法会将新主键设置到record对应的field中；如表为自增主键且record中对应主键的field不为null，则将对应的主键插入表中。',\n      '返回1若插入成功。', `\nEmployee employee = new Employee();\nemployee.setName('Alice');\nemployee.setPhone('123');\nemployeeDao.insert(employee);\nSystem.out.println('新纪录的id是:' + employee.getId());\n\nemployee = new Employee();\nemployee.setName('Bob');\nemployee.setPhone('124');\nemployee.setId(2L);\nemployeeDao.insert(employee); // 新记录的id(主键)为2`),\n    new MethodUsage('Employee selectOne(Long pk)', '通过主键查询一条记录', '根据主键查询记录。',\n      '返回记录对应的对象或者null。', `\nEmployee employee = employeeDao.selectOne(1L);\nif (employee == null) {\n  System.out.println('没有id为1的员工.');\n} else {\n  System.out.println('员工的信息为:' + employee.toString());\n}`),\n    new MethodUsage('Employee selectOne(EmployeeCriteria criteria)', '通过criteria查询一条记录', '通过criteria查询一条记录。',\n      '返回记录对应的对象或者null，若查询条件命中多条记录则抛出异常。', `\ntry {\n  Employee employee = employeeDao.selectOne(EmployeeCriteria.nameEqualTo(\"Alice\"));\n  if (employee == null) {\n    System.out.println(\"没有名字为Alice的记录\");\n  } else {\n    System.out.println(\"找到一条名字为Alice的记录:\", employee.toString());\n  }\n} catch (TooManyResultsException e) {\n  System.out.println(\"找到多条名字为Alice的记录\");\n}`),\n    new MethodUsage('List<Employee> selectList(EmployeeCriteria criteria)', '通过criteria查询多条记录', '通过criteria查询多条记录。',\n      '返回查询到的记录，或者一个空List如果没有查询到相应记录。', `\n// where name = 'Alice' and phone is not null;\nList<Employee> list = employeeDao.selectList(EmployeeCriteria.nameEqualTo(\"Alice\").andPhoneIsNotNull());\n// 该方法不会返回null\nfor (Employee employee : list) {\n  System.out.println(employee.toString());\n}\n\n// where (name = 'Alice' and phone is not null) or (name = 'Bob')\nList<Employee> list = employeeDao.selectList(EmployeeCriteria.nameEqualTo(\"Alice\").andPhoneIsNotNull()\n\t\t.or() // <-加入or\n\t\t.andNameEqualTo(\"Bob\"));\nfor (Employee employee : list) {\n  System.out.println(employee.toString());\n}\n\n// select id, name, phone from employee where id is not null limit 10 offset 1 order by name asc, phone desc for update\nList<Employee> list = employeeDao.selectList(EmployeeCriteria.idIsNotNull()\n  .setLimit(10L) // 最多10条记录\n  .setOffset(1L) // offset为1\n  .ascOrderBy(\"name\") // 通过name字段做asc排序, 参数为数据库中的字段名\n  .descOrderBy(\"phone\") // 若name相同则通过phone desc排序, 参数为数据库中的字段名\n  .setForUpdate(true) // 设置for update, 小心使用\n);\nfor (Employee employee : list) {\n  System.out.println(employee.toString());\n}\n`),\n    new MethodUsage('int count(EmployeeCriteria criteria)', '统计符合criteria的记录数量', '通过criteria统计记录数量。',\n      '返回统计数量。', `\nint count = employeeDao.count(EmployeeCriteria.phoneIsNotNull());\nSystem.out.println(\"找到\" + count + \"电话不为空的记录\");`),\n    new MethodUsage('int update(BaseEmployee record)', '通过主键更新记录', '该方法将record中不为null的field更新到对应主键的记录中',\n      '返回1如果更新成功，0如果该记录不存在', `\nEmployee employee = new Employee();\nemployee.setId(2L);\n// 只更新phone, name保持现状\nemployee.setPhone(\"156\");\nint count = employeeDao.update(employee);\nif (count == 1) {\n  System.out.println(\"更新成功。\");\n} else {\n  System.out.println(\"没有找到id为2的记录\");\n}`),\n    new MethodUsage('int update(BaseEmployee record, EmployeeCriteria criteria)', '通过criteria批量更新记录',\n      '该方法将record中不为null的field更新到criteria选中的记录。',\n      '返回被更新记录数量。', `\nEmployee employee = new Employee();\nemployee.setPhone(\"156\");\n// update employee set phone = '156' where id <= 4\nint count = employeeDao.update(employee, EmployeeCriteria.idLessThanOrEqualTo(4L));\nSystem.out.println(\"成功更新\" + count + \"条记录\");`),\n    new MethodUsage('int delete(Long pk)', '删除主键对应的记录', '删除主键对应的记录。',\n      `返回1如果删除成功，0如果没有该记录。`, `\n// delete from employee where id = 1\nint count = employeeDao.delete(1L);\nif (count == 1) {\n  System.out.println(\"删除成功\");\n} else {\n  System.out.println(\"没有找到该记录\");\n}`),\n    new MethodUsage('int delete(EmployeeCriteria criteria)', '通过条件批量删除', '批量删除，小心使用。',\n      '被删除记录数量。', `\n// delete from employee where id is not null\n// 务必保证这是你想要的。\nint count = employeeDao.delete(EmployeeCriteria.idIsNotNull());\nSystem.out.println(\"一共删除\" + count + \"条记录\");`)];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}